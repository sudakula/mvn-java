name: Maven Build, Scan, and Publish

on:
  push:
    branches:
      - main

jobs:
  # Job 1: Build the Maven project and save artifacts
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Build with Maven
      run: mvn -f ./pom.xml clean package -DskipTests

    - name: Save build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: built-artifact
        path: ./target/*.jar

  # Job 2: Code Scan
  code-scan:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    # - name: Run Maven Code Scan
    #   run: mvn verify sonar:sonar
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Run CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  # Job 3: Publish artifact to GitHub Packages
  publish:
    needs: [build, code-scan]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: built-artifact

    - run: |
        ls -al
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Configure Maven for GitHub Packages
      run: |
        echo "<settings><servers><server><id>github</id><username>${{ github.actor }}</username><password>${{ secrets.GITHUB_TOKEN }}</password></server></servers></settings>" > ~/.m2/settings.xml
  
    - name: Publish to GitHub Packages
      run: mvn -f ./pom.xml deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
        GITHUB_ACTOR: ${{ github.actor }}

  # Job 4: Build and Push Docker Image
  docker:
    needs: [build, code-scan]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: built-artifact

    - run: | 
        ls -al
        
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t ghcr.io/${{ github.repository_owner }}/mvn-java:latest .

    - name: Push Docker image
      run: |
        docker push ghcr.io/${{ github.repository_owner }}/mvn-java:latest
